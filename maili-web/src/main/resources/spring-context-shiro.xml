<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties"/>

    <!-- Shiro权限过滤过滤器定义 -->
    <bean name="shiroFilterChainDefinitions" class="java.lang.String">
        <constructor-arg>
            <value>
                <!--
                     @see  org.apache.shiro.web.filter.mgt.DefaultFilter 可配置类型
                     anon 不做权限控制；
                     auth 需要判断subject的principals是否存在；
                     authc 需要判断subject.isAuthenticated()
                     logout 会调用subject.logout();
                 -->
                <!--/ = anon-->
                <!--/** = anon-->
                /api/** = anon
                /favicon.ico = anon
                /static/** = anon
                /webjars/** = anon
                /swagger-ui.html=anon
                <!--/cas = cas-->
                /login = authc
                /logout = logout
                /** = user
            </value>
        </constructor-arg>
    </bean>

    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/><!--
		<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}/cas" /> -->
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"/>
        <!-- 覆盖DefaultFilter中定义的filter -->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <ref bean="shiroFilterChainDefinitions"/>
        </property>
    </bean>


    <!-- securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="systemAuthorizingRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 自定义会话管理配置 -->
    <bean id="sessionManager" class="com.zhou.framework.security.session.SessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- 会话超时时间，单位：毫秒  -->
        <property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
        <property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>

    <!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
            当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="web.session.id"/>
        <!-- 不会暴露给客户端 -->
        <property name="httpOnly" value="true"/>
        <!-- 设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie -->
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="sessionDAO" class="com.zhou.framework.security.session.CacheSessionDAO">
        <property name="sessionIdGenerator" ref="idGen"/>
        <property name="activeSessionsCacheName" value="activeSessionsCache"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>


    <!-- 自定义系统缓存管理器-->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 系统安全认证实现类 -->
    <bean id="systemAuthorizingRealm" class="com.zhou.busi.common.realm.SystemAuthorizingRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>


    <!-- 密码匹配器 -->
    <bean id="credentialsMatcher" class="com.zhou.framework.security.CustomCredentialsMatcher"/>


    <!--<aop:config proxy-target-class="true"></aop:config>-->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <!--	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
            <property name="proxyTargetClass" value="true" />
        </bean>-->


    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>